generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Users {
  id                   String    @id @unique @default(uuid())
  created_at           DateTime? @default(now())
  updated_at           DateTime? @default(now())
  username             String
  password             String
  role                 Role      @default(REDATOR)
  email                String    @unique
  password_reset_token String    @default("")
  phone                String
  verification_token   String    @default("")
  verified             Boolean   @default(false)
  Posts                Posts[]
}

model Posts {
  id                   String     @id @unique @default(uuid())
  title                String     @unique
  slug                 String     @unique
  content              String
  published            Boolean    @default(false)
  created_at           DateTime?  @default(now())
  updated_at           DateTime?  @default(now())
  tags                 String[]
  userId               String
  categoryId           String
  image                String
  Comments             Comments[]
  category             Categories @relation(fields: [categoryId], references: [id])
  author               Users      @relation(fields: [userId], references: [id])
}

model Comments {
  id                   String   @id @unique @default(cuid())
  name                 String
  comment              String
  created_at           DateTime @default(now())
  updated_at           DateTime @default(now())
  postId               String?
  Posts                Posts?   @relation(fields: [postId], references: [id])
}

model Categories {
  id                   String    @id @unique @default(uuid())
  created_at           DateTime? @default(now())
  updated_at           DateTime? @default(now())
  title                String    @unique
  description          String?
  Posts                Posts[]
}

model Services {
  id                   String    @id @unique @default(uuid())
  created_at           DateTime? @default(now())
  updated_at           DateTime? @default(now())
  title                String    @unique
  description          String
  icon                 String
}

model AboutCards {
  id                   String    @id @unique @default(uuid())
  created_at           DateTime? @default(now())
  updated_at           DateTime? @default(now())
  title                String    @unique
  description          String
  icon                 String
}

model Partners {
  id                   String    @id @unique @default(uuid())
  created_at           DateTime? @default(now())
  updated_at           DateTime? @default(now())
  name                 String    @unique
  occupation           String
  photo                String
}          

model Configuration {
  id                   String    @id @unique @default(uuid())
  created_at           DateTime? @default(now())
  created_by           String?
  title                String?
  description          String?
  tags                 String?
  social_medias        Json?
  phone                String?
  email                String?
}

enum Role {
  ADMIN
  REDATOR
}
